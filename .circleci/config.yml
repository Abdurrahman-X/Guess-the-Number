# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
defaults: &default
    docker:
      - image: circleci/node:13.8.0

commands:
    print-pipeline-id:
        description: "A simple command to print the id of the pipeline"
        parameters:
          to:
            type: string
        steps:
          - run: echo << parameters.to >>

    print-circleci-buildnum:
        description: "A simple command to print the circleci build number"
        parameters:
          to:
            type: integer
          steps:
            - run: echo << parameters.to >>


jobs:
######################### CREATING JOBS ############################
  # print-hello:
  #   # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
  #   docker:
  #     - image: circleci/node:13.8.0
  #   # Add steps to the job
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#steps
  #   steps:
  #     - run:
  #         name: "Print hello"
  #         command: "echo Hello!"

  # print-world:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - run:
  #         name: "Print world"
  #         command: "echo World!"

##################### SHARING FILES ########################################
  # save-hello-world-output:
  #     docker: 
  #       - image: circleci/node:13.8.0
  #     steps:
  #       - run: echo "hello world" > ~/output.txt
  #       - persist_to_workspace: 
  #           root: ~/
  #           paths:
  #             - output.txt

  # print-output-file:
  #     docker: 
  #       - image: circleci/node:13.8.0
  #     steps:
  #       - attach_workspace:
  #           at: ~/
  #       - run: cat ~/output.txt

  pipeline-id-generate:
        <<: *default
        steps:
          - print-pipeline-id:
              to: $CIRCLE_WORKFLOW_ID

  circle-buildnum-generate:
       <<: *default
        steps:
          - print-circleci-buildnum:
              to: $CIRCLE_BUILD_NUM
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  pipeline-workflow:
    jobs:
      - pipeline-id-generate
      - circle-buildnum-generate:
          requires: [pipeline-id-generate]
      
